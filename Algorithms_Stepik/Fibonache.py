
'''
Дано целое число 1≤n≤40, необходимо вычислить
n-е число Фибоначчи
'''

n = int(input())
sq5 = (5**0.5)
F = ((1 + sq5)**n - (1 - sq5)**n)/(sq5*(2**n))
print(int(round(F)))

'''
Дано число 1≤n≤10^7,
необходимо найти последнюю цифру n n n-го числа Фибоначчи.
Как мы помним, числа Фибоначчи растут очень быстро,
поэтому при их вычислении нужно быть аккуратным с переполнением.
В данной задаче, впрочем, этой проблемы можно избежать, поскольку
нас интересует только последняя цифра числа Фибоначчи:
если 0≤a,b≤9 0 \le a,b \le 9 0≤a,b≤9 — последние цифры чисел
Fi F_i Fi​ и Fi+1 F_{i+1} Fi+1​ соответственно, то (a+b) mod 10 (a+b)
\bmod{10} (a+b)mod10 — последняя цифра числа Fi+2 F_{i+2} Fi+2​.
'''

n = int(input())
F = []
F.append(0)
F.append(1)
for i in range(2,n+1):
    f = (F[i - 1] + F[i - 2])%10
    F.append(f)
print(F[n])

'''
Даны целые числа 1≤n≤1018 1 \le n \le 10^{18} 1≤n≤1018 и 2≤m≤105
необходимо найти остаток от деления n n n-го числа Фибоначчи на m m m.
'''

(n,m) = map(int, input().split())
F = []
F.append(0)
F.append(1)
p = 0
for i in range(2,n+1):
    f_1 = F[i-1]
    f = (f_1 + F[i - 2])%m
    F.append(f)
    #print(f,end=" ")
    if (f == 1) and f_1 == 0:
        p = i-1
        break
if p == 0:
    print(F[n])
else:
    print(F[n%p])
